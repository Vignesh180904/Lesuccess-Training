public class MountainArraySearch {
    interface MountainArray {
        int get(int index);
        int length();
    }
    static class TestMountainArray implements MountainArray {
        private int[] arr;

        public TestMountainArray(int[] arr) {
            this.arr = arr;
        }

        public int get(int index) {
            return arr[index];
        }

        public int length() {
            return arr.length;
        }
    }
    public static int findInMountainArray(int target, MountainArray mountainArr) {
        int n = mountainArr.length();
        int peak = findPeakIndex(mountainArr, 0, n - 1);
        int left = binarySearch(mountainArr, target, 0, peak, true);
        if (left != -1) return left;
        return binarySearch(mountainArr, target, peak + 1, n - 1, false);
    }

    private static int findPeakIndex(MountainArray mountainArr, int left, int right) {
        while (left < right) {
            int mid = (left + right) / 2;
            if (mountainArr.get(mid) < mountainArr.get(mid + 1)) {
                left = mid + 1;
            } else {
                right = mid;
            }
        }
        return left;
    }

    private static int binarySearch(MountainArray mountainArr, int target, int left, int right, boolean ascending) {
        while (left <= right) {
            int mid = (left + right) / 2;
            int val = mountainArr.get(mid);
            if (val == target) return mid;

            if (ascending) {
                if (val < target) left = mid + 1;
                else right = mid - 1;
            } else {
                if (val > target) left = mid + 1;
                else right = mid - 1;
            }
        }
        return -1;
    }
    public static void main(String[] args) {
        int[] arr = {1, 2, 3, 4, 5, 3, 1};
        int target = 5;
        MountainArray mountainArr = new TestMountainArray(arr);
        int result = findInMountainArray(target, mountainArr);
        System.out.println("Index of target: " + result); 
    }
}
