1)Find the Majority Element in an Array (Mooreâ€™s Voting Algorithm):

import java.util.Scanner;

public class MajorityElement {
    public static int findMajority(int[] arr, int n) {
        int count = 0, candidate = -1;

        for (int num : arr) {
            if (count == 0) {
                candidate = num;
                count = 1;
            } else if (num == candidate) {
                count++;
            } else {
                count--;
            }
        }

        return candidate;
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] arr = new int[n];
        for (int i = 0; i < n; i++) arr[i] = sc.nextInt();

        System.out.println(findMajority(arr, n));
    }
}

2)Maximum Subarray Sum (Kadane's Algorithm):

import java.util.Scanner;

public class MaxSubarraySum {
    public static int kadane(int[] nums) {
        int maxCurrent = nums[0], maxGlobal = nums[0];

        for (int i = 1; i < nums.length; i++) {
            maxCurrent = Math.max(nums[i], maxCurrent + nums[i]);
            maxGlobal = Math.max(maxGlobal, maxCurrent);
        }
        return maxGlobal;
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] nums = new int[n];
        for (int i = 0; i < n; i++) nums[i] = sc.nextInt();

        System.out.println(kadane(nums));
    }
}

3) First Non-Repeating Character in a String

import java.util.*;

public class FirstUniqueChar {
    public static int firstUniqChar(String s) {
        int[] freq = new int[26];

        for (char c : s.toCharArray()) {
            freq[c - 'a']++;
        }

        for (int i = 0; i < s.length(); i++) {
            if (freq[s.charAt(i) - 'a'] == 1) return i;
        }
        return -1;
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.nextLine().toLowerCase();
        System.out.println(firstUniqChar(s));
    }
}

4)Check if One String is a Rotation of Another

import java.util.Scanner;

public class StringRotation {
    public static boolean isRotation(String s1, String s2) {
        return (s1.length() == s2.length()) && ((s1 + s1).contains(s2));
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s1 = sc.nextLine();
        String s2 = sc.nextLine();
        System.out.println(isRotation(s1, s2));
    }
}


